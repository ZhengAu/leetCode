/**
 * You are given two strings s and t.
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * Return the letter that was added to t.
 *
 * Constraints:
 * 0 <= s.length <= 1000
 * t.length == s.length + 1
 * s and t consist of lower-case English letters.
 * @author zheng
 * @date 2020/12/06 17:06:43
 */

/**
 * @param {string} s
 * @param {string} t
 * @return {character}
 */
var findTheDifference = function (s, t) {
	let sourceMap = new Map();
	s.split('').forEach((item) => sourceMap.set(item, sourceMap.has(item) ? sourceMap.get(item) + 1 : 1));

	for (let i = 0; i < t.length; i++) {
		if (!sourceMap.has(t[i])) {
			return t[i];
		}
		sourceMap.set(t[i], sourceMap.get(t[i]) - 1);
		if (sourceMap.get(t[i]) < 0) {
			return t[i];
		}
	}
	return '';
};

/**
 * @param {string} s
 * @param {string} t
 * @return {character}
 */
var findTheDifference2 = function (s, t) {
	let map = new Array(26).fill(0);
	for (let i = 0; i < s.length; i++) {
		map[s.charCodeAt(i) - 97] -= 1;
		map[t.charCodeAt(i) - 97] += 1;
	}
	map[t.charCodeAt(t.length - 1) - 97] += 1;
	for (let i = 0; i < map.length; i++) {
		if (map[i] > 0) {
			return String.fromCharCode(i + 97);
		}
	}
	return '';
};

/**
 * @param {string} s
 * @param {string} t
 * @return {character}
 */
var findTheDifference3 = function (s, t) {
	let sourceMap = new Map();
	s.split('').forEach((item) => sourceMap.set(item, sourceMap.has(item) ? sourceMap.get(item) + 1 : 1));

	for (let i = 0; i < t.length; i++) {
		if (!sourceMap.has(t[i]) || sourceMap.get(t[i]) == 0) {
			return t[i];
		}
		sourceMap.set(t[i], sourceMap.get(t[i]) - 1);
	}
	return '';
};
